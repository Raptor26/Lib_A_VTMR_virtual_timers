/**
 * @file    Lib_A_VTMR_virtual_timers.h
 * @author  Mickle Isaev
 * @version
 * @date    18-фев-2019
 * @brief
 */


#ifndef LIB_A_VTMR_VIRTUAL_TIMERS_H
#define LIB_A_VTMR_VIRTUAL_TIMERS_H


/*#### |Begin| --> Секция - "Include" ########################################*/
/*==== |Begin| --> Секция - "C libraries" ====================================*/
#include <stdint.h>
#include <stddef.h>
/*==== |End  | <-- Секция - "C libraries" ====================================*/

/*==== |Begin| --> Секция - "MK peripheral libraries" ========================*/
/*==== |End  | <-- Секция - "MK peripheral libraries" ========================*/

/*==== |Begin| --> Секция - "Extern libraries" ===============================*/
/*==== |End  | <-- Секция - "Extern libraries" ===============================*/
/*#### |End  | <-- Секция - "Include" ########################################*/


/*#### |Begin| --> Секция - "Определение констант" ###########################*/
#define VTMR_16BIT_CNT_MAX_VAL              ((uint16_t)0xFFFF)
#define VTMR_32BIT_CNT_MAX_VAL              ((uint32_t)0xFFFFFFFF)
/*#### |End  | <-- Секция - "Определение констант" ###########################*/


/*#### |Begin| --> Секция - "Определение типов" ##############################*/
typedef struct
{
	/**-------------------------------------------------------------------------*//**
	 *  Значение аппаратного счетчика при вызове функции VTMR_StartTimer()
	 */
	uint32_t volatile cnt;

	/**-------------------------------------------------------------------------*//**
	 *  Указатель на старшие 16 бит аппаратного счетчика
	 */
	const uint16_t volatile *pHighCntReg;

	/**-------------------------------------------------------------------------*//**
	 *  Указатель на младшие 16 бит аппаратного счетчика
	 */
	const uint16_t volatile *pLowCntReg;

	/**-------------------------------------------------------------------------*//**
	 *  В данную переменную записывается временной интервал между
	 *  вызовами функции VTMR_StartTimer() и VTMR_GetValueTimer() в тиках
	 *  аппаратного счетчика
	 */
	uint32_t timeInterval;

	uint32_t timeIntervalMax;
} vtrm_tmr_s;

typedef struct
{
    /**---------------------------------------------------------------------*//**
     *  Указатель на старшие 16 бит аппаратного счетчика
     */
	uint16_t volatile *pHighCntReg;

    /**---------------------------------------------------------------------*//**
     * Указатель на младшие 16 бит аппаратного счетчика
     */
	uint16_t volatile *pLowCntReg;
} vtrm_tmr_init_s;
/*#### |End  | <-- Секция - "Определение типов" ##############################*/


/*#### |Begin| --> Секция - "Определение глобальных переменных" ##############*/
/*#### |End  | <-- Секция - "Определение глобальных переменных" ##############*/


/*#### |Begin| --> Секция - "Прототипы глобальных функций" ###################*/
extern void
VTMR_StructInit(
	vtrm_tmr_init_s *pVirtTMRInit);

extern void
VTMR_Init(
	vtrm_tmr_s      *pVirtTMR,
	vtrm_tmr_init_s *pVirtTMRInit);

extern void
VTMR_StartTimer(
	vtrm_tmr_s *pVTMR);

extern uint32_t
VTMR_GetTimerValue(
	vtrm_tmr_s *pVTMR);
/*#### |End  | <-- Секция - "Прототипы глобальных функций" ###################*/


/*#### |Begin| --> Секция - "Определение макросов" ###########################*/
/*#### |End  | <-- Секция - "Определение макросов" ###########################*/

#endif  /* LIB_A_VTMR_VIRTUAL_TIMERS_H */

/*############################################################################*/
/*################################ END OF FILE ###############################*/
/*############################################################################*/
